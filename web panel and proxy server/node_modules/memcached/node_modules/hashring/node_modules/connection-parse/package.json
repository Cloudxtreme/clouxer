{
  "name": "connection-parse",
  "version": "0.0.7",
  "description": "Simple TCP connection string parser",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha $(shell find test -name '*.test.js')"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/3rd-Eden/connection-parse.git"
  },
  "keywords": [
    "TCP",
    "connection",
    "parser",
    "connection-string"
  ],
  "author": {
    "name": "Arnout Kazemier"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "1.8.x",
    "chai": "1.4.x"
  },
  "readme": "# connection-parse\n\nSimple TCP connection string parser, and nothing more then that. It simply\ntransforms `1.1.1.1:1111` in to a simple parsed object. I seem to do this a lot\nin most of my modules such as hashring, memcached and failover. So it makes\nsense to extract this in to a small util.\n\n## Installation\n\nInstall this module using `npm`:\n\n```\nnpm install connection-parse --save\n```\n\nThe `--save` automatically adds the package and version to your `package.json`.\n\n## API\n\n```js\nvar parse = require('connection-parse');\n\nparse('1.1.1.1:1111')\nparse('1.1.1.1:1111', '1.3.3.4:1345');\nparse(['1.1.1.1:1111', '1.3.3.4:1345']);\nparse({ '1.1.1.1:1111': 100 });\n\n{\n  servers: [{\n    string: '1.1.1.1:1111',\n    host: '1.1.1.1',\n    port: 1111\n  }],\n  regular: ['1.1.1.1:1111'],\n  weighted: {\n    '1.1.1.1:1111': 100 // or 1 by default\n  }\n}\n\n// It also accepts custom parsers\nparse.merge(function (data) {\n  data.foo = 'bar';\n  return data;\n});\n\nThen the server instances will also have an extra property, `foo`.\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/3rd-Eden/connection-parse/issues"
  },
  "homepage": "https://github.com/3rd-Eden/connection-parse",
  "_id": "connection-parse@0.0.7",
  "_from": "connection-parse@0.0.x"
}
